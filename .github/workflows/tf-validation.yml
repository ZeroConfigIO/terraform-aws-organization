# name: Terraform validation

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# env:
#   TERRAFORM_DOCS_VERSION: "0.16.0"
#   TFLINT_VERSION: "0.34.1"
#   TFSEC_VERSION: "0.63.1"
#   TERRASCAN_VERSION: "1.13.0"

# jobs:
#   terraform-validation:
#     runs-on: ubuntu-20.04

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v2

#       - uses: actions/setup-python@v2
#       - shell: bash
#         run: |
#           pip install checkov
#       - shell: bash
#         run: |
#           pip install detect-secrets

#       # Terraform Create Docs
#       - uses: actions/cache@v2.0.0
#         id: cache-terraform-docs
#         with:
#           path: |
#             ~/terraform-docs/bin/
#           key: ${{ runner.os }}-terraform_docs-${{ env.TERRAFORM_DOCS_VERSION }}
#           restore-keys: |
#             ${{ runner.os}}-terraform_docs-
#       - shell: bash
#         if: steps.cache-terraform-docs.output.cache-hit != 'true'
#         run: |
#           wget -O terraform-docs-linux-amd64.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v${{ env.TERRAFORM_DOCS_VERSION }}/terraform-docs-v${{ env.TERRAFORM_DOCS_VERSION }}-linux-amd64.tar.gz
#           tar xvzf terraform-docs-linux-amd64.tar.gz
#           mkdir -p ~/terraform-docs/bin/
#           install terraform-docs ~/terraform-docs/bin/
#       - shell: bash
#         run: echo '~/terraform-docs/bin/' >> $GITHUB_PATH

#       # - uses: actions/checkout@v2
#       #   name: Checkout source code

#       # - uses: actions/cache@v2
#       #   id: cache-pre-commit-dependencies
#       #   name: "CACHE: pip and pre-commit dependencies"
#       #   with:
#       #     path: |
#       #       ~/.cache/pre-commit
#       #       ~/.cache/pip
#       #     key: ${{ runner.os }}-pip-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
#       #     restore-keys: |
#       #       ${{ runner.os }}-pip-pre-commit-

#       # Terraform Lint Checks
#       - uses: actions/cache@v2
#         id: cache-tflint
#         with:
#           path: |
#             ~/tflint/bin/
#           key: ${{ runner.os }}-tflint-${{ env.TFLINT_VERSION }}
#           restore-keys: |
#             ${{ runner.os }}-tflint-
#       - shell: bash
#         if: steps.cache-tflint.outputs.cache-hit != 'true'
#         run: |
#           wget -O tflint_linux_amd64.zip https://github.com/terraform-linters/tflint/releases/download/v${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
#           unzip tflint_linux_amd64.zip
#           mkdir -p ~/tflint/bin/
#           install tflint ~/tflint/bin/
#       - shell: bash
#         run: echo '~/tflint/bin/' >> $GITHUB_PATH

#       # Terraform Security Checks
#       - uses: actions/cache@v2
#         id: cache-tfsec
#         with:
#           path: |
#             ~/tfsec/bin/
#           key: ${{ runner.os }}-tfsec-${{ env.TFSEC_VERSION }}
#           restore-keys: |
#             ${{ runner.os }}-tfsec-
#       - shell: bash
#         if: steps.cache-tfsec.outputs.cache-hit != 'true'
#         run: |
#           wget https://github.com/tfsec/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
#           mkdir -p ~/tfsec/bin/
#           install tfsec-linux-amd64 ~/tfsec/bin/
#       - shell: bash
#         run: echo '~/tfsec/bin/' >> $GITHUB_PATH

#       # Terrascan
#       - uses: actions/cache@v2
#         id: cache-terrascan
#         with:
#           path: |
#             ~/terrascan/bin/
#           key: ${{ runner.os }}-terrascan-${{ env.TERRASCAN_VERSION }}
#           restore-keys: |
#             ${{ runner.os }}-terrascan-
#       - shell: bash
#         # name: "INSTALL: terrascan"
#         if: steps.cache-terrascan.outputs.cache-hit != 'true'
#         run: |
#           wget -O terrascan_Linux_x86_64.tar.gz https://github.com/accurics/terrascan/releases/download/v${{ env.TERRASCAN_VERSION }}/terrascan_${{ env.TERRASCAN_VERSION }}_Linux_x86_64.tar.gz
#           tar xvzf terrascan_Linux_x86_64.tar.gz
#           mkdir -p ~/terrascan/bin/
#           install terrascan ~/terrascan/bin/
#       - shell: bash
#         run: echo '~/terrascan/bin/' >> $GITHUB_PATH

#       # Pre-commit checks
#       - uses: actions/cache@v2
#         id: cache-pre-commit-dependencies
#         with:
#           path: |
#             ~/.cache/pre-commit
#             ~/.cache/pip
#           key: ${{ runner.os }}-pip-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
#           restore-keys: |
#             ${{ runner.os }}-pip-pre-commit-
#       - uses: pre-commit/action@v2.0.3
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#         env:
#           AWS_DEFAULT_REGION: "ap-southeast-2"
